[{"title":"微信更新头像昵称组件","url":"/202409_微信更新头像昵称组件/","content":"\n\n\n```javascript\n<template>\n\t<view>\n\t\t<u-modal :show=\"show\" @close=\"$emit('close')\" @cancel=\"$emit('close')\" @confirm=\"onConfirm\" title=\"头像与昵称\"\n\t\t\t:confirm-text=\"$t('confirm')\" :cancel-text=\"$t('cancel')\" wConfirmButton :showCancelButton=\"!force\">\n\n\t\t\t<view class=\"slot-content flex flex-column\" style=\"gap:32px\">\n\t\t\t\t<view class=\"avatar\" style=\"position: relative;\">\n\t\t\t\t\t<button plain open-type=\"chooseAvatar\" @chooseavatar=\"chooseAvatar\">\n\t\t\t\t\t\t<u-avatar :src=\"userprofile.avatar\" :size=\"64\" style=\"height: 100%;\" mode=\"widthFix\"></u-avatar>\n\t\t\t\t\t</button>\n\t\t\t\t\t<view class=\"flex\" style=\"position: absolute;bottom:-16px;width: 100%;;justify-content: center\">\n\t\t\t\t\t\t<u-tag :text=\"$t('change')\" type=\"warning\" shape=\"circle\" size=\"mini\"></u-tag>\n\t\t\t\t\t</view>\n\n\t\t\t\t</view>\n\t\t\t\t<input v-model=\"userprofile.nickname\" type=\"nickname\" @change=\"setNickname\"></input>\n\t\t\t</view>\n\t\t</u-modal>\n\t</view>\n</template>\n\n<script>\n\timport api from '@/api';\n\n\texport default {\n\t\tprops: {\n\t\t\tshow: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tforce: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: false\n\t\t\t},\n\t\t\tnewUser: {\n\t\t\t\ttype: Boolean,\n\t\t\t\tdefault: true\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tuserprofile: {\n\t\t\t\t\tnickname: null,\n\t\t\t\t\tavatar: null,\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tonLoad() {},\n\t\twatch: {\n\t\t\tshow(v) {\n\t\t\t\tif (v) {\n\t\t\t\t\tthis.getData()\n\t\t\t\t}\n\t\t\t}\n\t\t},\t\t\n\t\tmethods: {\n\t\t\tasync onConfirm() {\n\t\t\t\tif (this.force && !this.userprofile.avatar) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '请设置一个头像',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.force && !this.userprofile.nickname) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '请填写昵称',\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tuni.showLoading({\n\t\t\t\t\t//title: '正在更新',\n\t\t\t\t\tmask: true\n\t\t\t\t});\n\t\t\t\ttry {\n\t\t\t\t\tawait api.profile.updateNickname(\n\t\t\t\t\t\tthis.userprofile.nickname\n\t\t\t\t\t);\n\t\t\t\t\tawait api.profile.updateAvatar(\n\t\t\t\t\t\tthis.userprofile.avatar\n\t\t\t\t\t);\n\t\t\t\t\tthis.userprofile = await api.profile.getUserProfile();\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: this.$t('success'),\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: this.$t('fail'),\n\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.$emit('confirm', {\n\t\t\t\t\tavatar: this.userprofile.avatar,\n\t\t\t\t\tnickname: this.userprofile.nickname\n\t\t\t\t})\n\t\t\t},\n\t\t\tgetData() {\n\t\t\t\tapi.profile.getUserProfile().then(res => {\n\t\t\t\t\tthis.userprofile = res;\n\t\t\t\t\tif (this.newUser) {\n\t\t\t\t\t\tthis.userprofile = {\n\t\t\t\t\t\t\tavatar: null,\n\t\t\t\t\t\t\tnickname: null,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tsetNickname(v) {\n\t\t\t\tconsole.log(this.userprofile.nickname)\n\t\t\t\t//this.userprofile.nickname = v\n\t\t\t},\n\t\t\tchooseAvatar(e) {\n\n\t\t\t\tapi.fileManagement.uploadFile(e.detail.avatarUrl, 'AbpMS.Users.UsersBlobContainer')\n\t\t\t\t\t.then(res => {\n\t\t\t\t\t\tthis.userprofile.avatar = res.downloadInfo.downloadUrl\n\t\t\t\t\t}).catch(err => {\n\t\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\t\ttitle: this.$t('fail'),\n\t\t\t\t\t\t\ticon: 'none'\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t},\n\t\t}\n\t};\n</script>\n\n<style lang=\"less\" scoped>\n\t.avatar {\n\t\tbutton {\n\t\t\tborder: none;\n\t\t\tpadding: 0px;\n\t\t\tline-height: 30px;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\n\t\t\tview {\n\t\t\t\theight: 66px;\n\t\t\t}\n\t\t}\n\t}\n</style>\n```\n\n"},{"title":"电脑上传速度慢","url":"/202408_电脑上传速度慢/","content":"\n> 我们有时候上传文件视频发现速度只有几十K，但是现在下载速度却很快，这是怎么回事呢?\n\n电脑上传速度慢怎么解决　　\n\n点击“开始--运行”或者“窗口键+R”，输入 gpedit.msc 回车　　\n\n出现“组策略对象编辑器\"　　\n\n展开“计算机配置--管理模板--网络--QoS数据包计划程序”　　\n\n双击右面设置栏中的“限制可保留带宽”　　\n\n“限制可保留带宽”设置为“已启用”，\n\n然后在下面展开的“带宽限制(%)”栏将带宽值“20”设置为“0”确定即可\n\n大家的电脑上传速度慢其实是网络被限制了哦，只要按以上方法把限制带宽修改了\n\n就可以了，大家赶紧试试吧!\n\n","tags":["电脑"],"categories":["Other"]},{"title":"koa快速搭建node服务端，部署至vercel","url":"/202408_koa快速搭建node服务端/","content":"\n1、全局安装 koa-generator\n\n> koa-generator 构建 koa 项目自动集成必备插件\n\n```bash\nnpm i koa-generator -g\n```\n\n2、构建初始化项目\n\n```bash\nkoa2 my-project\n```\n\n生成的package.json\n\n```json\n{\n  \"name\": \"my-project\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node bin/www\",\n    \"dev\": \"./node_modules/.bin/nodemon bin/www\",\n    \"prd\": \"pm2 start bin/www\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"dependencies\": {\n    \"debug\": \"^4.1.1\",\n    \"koa\": \"^2.7.0\",\n    \"koa-bodyparser\": \"^4.2.1\",\n    \"koa-convert\": \"^1.2.0\",\n    \"koa-json\": \"^2.0.2\",\n    \"koa-logger\": \"^3.2.0\",\n    \"koa-onerror\": \"^4.1.0\",\n    \"koa-router\": \"^7.4.0\",\n    \"koa-static\": \"^5.0.0\",\n    \"koa-views\": \"^6.2.0\",\n    \"pug\": \"^2.0.3\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^1.19.1\" // 方便热更新\n  }\n}\n```\n\n3、安装依赖并运行\n\n```bash\ncd my-project\nnpm install && npm run dev\n```\n\n4、安装`koa2-cors` 解决跨域\n\n```\n npm i koa2-cors \n```\n\n5、vercel 配置\n\n入口文件\n\n> 入口文件一定要是index.js,如果改写其他如 app.js,main.js 等等 vercel 均无法识别，这是一个大坑.\n>\n> koa 监听端口不能是 3000 ,因为vercel 默认是 3000 端口\n\n"},{"title":"ArcGIS入门-1","url":"/202407_ArcGIS入门-1/","content":"\n## 一、准备工作\n\n1. 注册开发者账号：[https://developers.arcgis.com/](https://developers.arcgis.com/javascript/latest/)\n\n2. 获取 API 密钥\n\n3. 引入 SDK 库：通过 `CDN` 或者下载`本地文件`的方式进行引入。\n\n4. 编写代码：根据 SDK 提供的`文档`和`示例`，编写代码实现地图展示、地理编码、空间分析等功能。\n\n\n\n## 二、Vue 3 引入 WebGIS 地图\n\n1、用命令行来创建一个 Vue 3项目\n\n> 将node 和 npm 都升级成最新版\n\n```bash\nnpm create vue@latest\n```\n\n\n\n2、**安装 ArcGIS Maps SDK for JavaScript**\n\n```bash\nnpm install @arcgis/core\n```\n\n\n\n3、**创建地图组件**\n\nmain.ts 中引入样式\n\n```javascript\n@import url('@arcgis/core/assets/esri/themes/light/main.css');\n```\n\n\n\n4、在 `src/components` 目录下创建一个名为 `MapView.vue` 的文件\n\n```html\n<template>\n  <div id=\"map\"></div>\n</template>\n<script setup lang=\"ts\">\nimport { onMounted } from 'vue'\nimport Map from '@arcgis/core/Map.js'\nimport MapView from '@arcgis/core/views/MapView.js'\nconst initMap = () => {\n  const map = new Map({\n    // topo-vector 底图，即矢量拓扑地图。\n    basemap: 'topo-vector' \n  })\n  const view = new MapView({\n    map,\n    container: 'map',\n    center: [121.47,31.23], // 地图中心点：上海\n    zoom: 10\n  })\n  view.ui.components = [] // 清除ArcGIS默认自带的信息\n}\nonMounted(() => {\n  initMap()\n})\n</script>\n<style scoped>\n#map {\n  width: 100%;\n  height: 100%;\n}\n</style>\n```\n\n5、**使用地图组件**\n\nApp.vue\n\n```html\n<template>\n  <MapView />\n</template>\n<script setup lang=\"ts\">\nimport MapView from './components/MapView.vue'\n</script>\n<style>\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n#app {\n  width: 100%;\n  height: 100%;\n}\n</style>\n```\n\n\n\n6、**自定义底图（天地图）**\n\nWebGIS 项目开发一般会涉及到`自定义系统地图`，本文就拿目前国内公网上的免费地图服务（`天地图`）来举例讲解如何去自定义底图。\n\n使用天地图地图资源时需要先在天地图官网`注册账号`，并`申请成为开发者`，然后拿到天地图开发者的 `Key`，具体流程在官网按照提示一步步操作即可，无需过多介绍。\n\n","tags":["ArcGIS"]},{"title":"剧本故事提示词编排","url":"/202405_剧本故事提示词编排/","content":"\n### 故事创作提示词格式\n\nPrompt\n\n```bash\n标题:”generate:小说的标题”\n设置：”generate:小说的情景设置细节，包括时间段、地点和所有相关背景信息”\n主角: ”generate:小说主角的名字、年龄、职业，以及他们的性格和动机、简要的描述”\n反派角色：”generate:小说反派角色的名字、年龄、职业，以及他们的性格和动机、简要的描述”\n冲突：”generate:小说故事的主要冲突，包括主角面临的问题和涉及的利害关系”\n对话：”generate:以对话的形式描述情节，揭示人物，以此提供一些提示给读者”\n主题：”generate:小说中心主题，并说明如何在整个情节、角色和背景中展开“\n基调：”generate:整体故事的基调，以及保持背景和人物的一致性和适当性的说明“\n节奏: ”generate:调节故事节奏以建立和释放紧张气氛，推进情节，创造戏剧效果的说明“\n其它：”generate:任何额外的细节或对故事的要求，如特定的字数或题材限制“\n根据上面的模板生成为 {题材}小说填充内容。\n```\n\n"},{"title":"SCSS设计稿px转换vw","url":"/202405_SCSS设计稿px转换vw/","content":"\n```vue\n<template>\n<div class=\"line-4-card\">\n    <div class=\"flex\"><img :src=\"imgUrl\"/><span class=\"type-name\">{{title}}</span>\n      <span class=\"right-title\">Block 100个</span>\n    </div>\n    <div class=\"line4-con\">\n        <div class=\"flex justify-between\">\n          <div class=\"line4-btn gray-l-btn\">Block：300(个)</div>\n          <div class=\"line4-btn\" :class=\"`${themeColor}-l-btn`\">Block：400(个)</div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div class=\"main-triangle gray-triangle triangle-width-225\">▲</div>\n          <div class=\"main-triangle triangle-width-225\" :class=\"`${themeColor}-triangle`\">▲</div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div class=\"group-btn group-gray-btn\">Block 200</div>\n          <div class=\"group-btn group-gray-btn\">Block 200</div>\n          <div class=\"group-btn\" :class=\"`group-${themeColor}-btn`\">Block 200</div>\n          <div class=\"group-btn\" :class=\"`group-${themeColor}-btn`\">Block 200</div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div class=\"main-triangle gray-triangle triangle-width-108\">▲</div>\n          <div class=\"triangle-width-108\"></div>\n          <div class=\"main-triangle triangle-width-108\" :class=\"`${themeColor}-triangle`\">▲</div>\n          <div class=\"triangle-width-108\"></div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div class=\"group-btn group-gray-btn\">Block 200</div>\n          <div class=\"group-btn group-gray-btn line-blue\">Block 200</div>\n          <div class=\"group-btn\" :class=\"`group-${themeColor}-btn`\">Block 200</div>\n          <div class=\"group-btn\" :class=\"`group-${themeColor}-btn line-${themeColor}`\">Block 200</div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div class=\"triangle-width-108\"></div>\n          <div class=\"triangle-width-108\"></div>\n          <div class=\"main-triangle triangle-width-108\" :class=\"`${themeColor}-triangle`\">▲</div>\n          <div class=\"triangle-width-108\"></div>\n        </div>\n        <div class=\"flex justify-between\">\n          <div class=\"triangle-width-108\"></div><div class=\"triangle-width-108\"></div>\n          <div class=\"group-btn\" :class=\"`group-${themeColor}-btn`\">Block 200</div>\n          <div class=\"group-btn\" :class=\"`group-${themeColor}-btn line-${themeColor}`\">Block 200</div>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nexport default {\n    props: {\n      title:[Number,String],\n      themeColor: String,\n    },\n    data(){\n      return {}\n    },\n    computed: {\n      imgUrl(){\n        if (this.themeColor=='yellow') {\n          // return require('../icons/home/general-min.png')\n        } else if (this.themeColor=='blue') {\n          // return require('../icons/home/small-min.png')\n        } else if (this.themeColor=='green'){\n          // return require('../icons/home/zero-min.png')\n        }\n      }\n    },\n    methods: {}\n};\n</script>\n\n<style lang=\"scss\" scoped>\n  $designWidth: 19.2; //设计稿宽度 100% = 100vw = 1920px  1vw = 19.2px\n  @function px($px) {\n    @return $px/$designWidth + vw;\n  }\n  .line-4-card {\n    width: 33%;\n    height: px(316);\n    background-color: #fff;\n    box-shadow: 0px -5px 20px 0px rgba(0, 73, 152, 0.05);\n    border-radius: 10px;\n    img {\n      width: px(95);\n      height: px(95);\n    }\n    .type-name {\n      line-height: px(90);\n      font-size: px(18);\n      font-weight: bold;\n      color: #333;\n    }\n    .right-title {\n      color: #333333;\n      font-size: px(15);\n      line-height: px(90);\n      margin-left: auto;\n      margin-right: px(30);\n    }\n    .line4-con {\n      padding-left: px(30);\n      padding-right: px(30);\n      padding-bottom: px(30);\n      margin-top: px(-20);\n      z-index: 1;\n      .line4-btn {\n        width: px(225);\n        height: px(40);\n        line-height: px(40);\n        border-radius: 2px;\n        text-align: center;\n        color: #fff;\n        font-size: px(14);\n      }\n      .gray-l-btn {\n        background: #bdc5cf;\n        box-shadow: 0px 2px 6px 0px rgba(208, 203, 203, 0.5);\n      }\n      .yellow-l-btn {\n        background: linear-gradient(270deg, #ffc669 0%, #fd993e 100%);\n        box-shadow: 0px 2px 6px 0px rgba(208, 203, 203, 0.5);\n      }\n      .blue-l-btn {\n        background: linear-gradient(270deg, #54b9ff 0%, #2a83ff 100%);\n        box-shadow: 0px 2px 6px 0px #d0cbcb;\n      }\n      .green-l-btn {\n        background: linear-gradient(270deg, #7dde9f 0%, #54c774 100%);\n        box-shadow: 0px 2px 6px 0px rgba(208, 203, 203, 0.5);\n      }\n      .main-triangle {\n        text-align: center;\n      }\n      .gray-triangle {\n        color: #dbe1e9;\n      }\n      .yellow-triangle {\n        color: #fed1ad;\n      }\n      .blue-triangle {\n        color: #9dcbff;\n      }\n      .green-triangle {\n        color: #95e7af;\n      }\n      .triangle-width-225 {\n        width: px(225);\n      }\n      .triangle-width-108 {\n        width: px(108);\n      }\n      .group-btn {\n        cursor: pointer;\n        width: px(108);\n        line-height: px(40);\n        height: px(40);\n        color: #333333;\n        font-size: px(14);\n        padding-left: px(12);\n        border-radius: 2px;\n      }\n      .group-gray-btn {\n        background: #f9f9f9;\n        border: 1px solid #f9f9f9;\n        &:hover {\n          border: 1px solid #a7b5c8;\n        }\n      }\n      .group-yellow-btn {\n        background: #fff8f5;\n        border: 1px solid #fff8f5;\n        &:hover {\n          border: 1px solid #fd9d42;\n          color: #fd9d42;\n        }\n      }\n      .group-blue-btn {\n        background: #F2F8FF;\n        border: 1px solid #F2F8FF;\n        &:hover {\n          border: 1px solid #1678FF;\n          color: #1678FF;\n        }\n      }\n      .group-green-btn {\n        background: #F4FAF6;\n        border: 1px solid #F4FAF6;\n        &:hover {\n          border: 1px solid #0DCA7C;\n          color: #0DCA7C;\n        }\n      }\n      .line-blue,\n      .line-yellow,\n      .line-blue,\n      .line-green {\n        position: relative;\n        white-space: nowrap;\n      }\n      .line-blue::before {\n        content: \"...\";\n        color: #9cbfdb;\n        font-size: px(15);\n        font-weight: bold;\n        display: inline-block;\n        position: absolute;\n        top: px(-4);\n        left: px(-13);\n      }\n      .line-yellow::before {\n        content: \"...\";\n        color: #fe9c41;\n        font-size: px(15);\n        font-weight: bold;\n        display: inline-block;\n        position: absolute;\n        top: px(-4);\n        left: px(-13);\n      }\n      .line-green::before {\n        content: \"...\";\n        color: #0DCA7C;\n        font-size: px(15);\n        font-weight: bold;\n        display: inline-block;\n        position: absolute;\n        top: px(-4);\n        left: px(-13);\n      }\n    }\n  }\n</style>\n```\n\n"},{"title":"命令行合集","url":"/202405_命令行合集/","content":"\n## mySql\n\n```bash\n# 管理员命令\ncd  /c C:\\xx\\mysql-8.0.31-winx64\\bin\n\n# 启动服务\nnet start mysql\n\n# 登陆mysql\nmysql -u root -p\n\n# 退出mysql\nexit\n\n# 删除服务\n1.以管理员身份运行，输入sc query [MySqlName]，查看一下名为[MySqlName]的服务\n2.命令sc delete [MySqlName]，删除该[MySqlName]\n```\n\n## navicat删除注册表\n\n> 删除注册表，重置navicat试用时间\n\n- 删除 HKEY_CURRENT_USER\\Software\\Classes\\CLSID 下所有带**info**的项目\n\n- reg delete “HKEY_CURRENT_USER\\Software\\PremiumSoft\\NavicatPremium\\Registration15XCS” /f\n\n- reg delete “HKEY_CURRENT_USER\\Software\\PremiumSoft\\NavicatPremium\\Update” /f\n\n- reg delete \"HKEY_CURRENT_USER\\Software\\Classes\\CLSID\" /f\n\n"},{"title":"歌词大师Prompt","url":"/202405_歌词大师Prompt/","content":"\n### Prompt\n\n```css\n#01 你是歌词大师XX，现在，我需要你帮我写一段XX歌词，描述的是一个XX故事，整体歌曲时长2分钟以内，要押韵，要有文学气质，副歌部分要进行跨行重复。请按以下结构帮我创作：\n\n\"\"\"\n\n[instrumental intro]\n\n[Verse 1]\n\n<歌词>\n\n[Chorus]\n\n<歌词>\n\n[Verse 2]\n\n<歌词>\n\n[Chorus]\n\n<歌词>\n\n[Bridge]\n\n<歌词>\n\n[Guitar solo]\n\n[Chorus]\n\n<歌词>\n\n[Outro]\n\n[End]\n\n\"\"\"\n\n#02 输出歌词以后，再根据歌词和故事内容，以英文词组的形式再给出歌曲的prompt。\n\n请按以下格式帮我输出英文prompt：\n\n\"\"\"<音乐流派（如Kpop、Heavy Metal）>、<音乐风格（如Slow、Broadway）>、<情绪（如悲伤、愤怒）>、<乐器（如钢琴、吉他）>、<主题或场景>、<人声描述（如愤怒的男声、忧伤的女声）>\"\"\"\n```\n\n\n","tags":["音乐"],"categories":["AIGC"]},{"title":"微软应用商店不小心卸载了怎么重装","url":"/202402_微软应用商店不小心卸载了怎么重装/","content":"\n1、按下Win+X快捷键，选择“Windows PowerShell（管理员）”。\n\n2、输入以下内容，可以一行一行复制粘贴，再按回车执行。\n\n```bash\nget-appxpackage *store* | remove-Appxpackage\nadd-appxpackage -register \"C:\\Program Files\\WindowsApps\\*Store*\\AppxManifest.xml\" -disabledevelopmentmode\n```\n\n3、再搜索关键字microsoft store，打开即可。（也许需要打开两次，可能服务器连接问题）","tags":["电脑"],"categories":["Other"]},{"title":"Git 常用指令","url":"/202311_Git-常用指令/","content":"\n## 分支操作\n\n- 创建分支并切换\n\n  ```bash\n  git checkout -b [branch name]\n  ```\n- 修改分支名称\n  ```bash\n  git branch -m [source] [target]\n  ```\n- 删除本地分支\n  ```bash\n  git branch -d [branch name]\n  ```\n\n- 删除远程分支\n  ```bash\n  git push origin --delete [branch name]\n  ```\n\n## 暂存\n- 暂存本地数据\n  ```bash\n  git stash\n  ```\n- 取出暂存修改\n  ```bash\n  git stash pop\n  ```\n\n## 配置用户名和邮箱\n- 当前项目\n```bash\n# 在需要配置的项目目录中执行\ngit config user.email \"xxx@qq.com\"\ngit config user.name \"your username\"\n```\n- 全局配置\n```bash\ngit config --global user.email \"xxx@qq.com\"\ngit config --global user.name \"your username\"\n```\n\n## 更换远程仓库地址\n```bash\ngit remote set-url origin [remote address]\n```\n\n## 配置多个 SSH Key\n> 在实际应用中，存在多个项目代码托管仓库不同，github、gitee、gitlab，这时候需要在本地配置多个ssh key，这里以 github、gitee 为例\n\n- **生成两个SSH Key**\n> 一路回车即可，`.ssh`文件夹下面多了两个文件\n```bash\n# 生成`github`密钥\nssh-keygen -t rsa -C 'xxx@github.com' -f ~/.ssh/github_rsa\n# 生成`gitee`密钥\nssh-keygen -t rsa -C 'xxx@gitee.com' -f ~/.ssh/gitee_rsa\n```\n- 使用命令 **`cat ~/.ssh/github_rsa.pub`** 查看Github的SSH Key，复制`ssh`开头的那一串公钥，添加到查看Github的SSH仓库\n- 使用命令 **`cat ~/.ssh/gitee_rsa.pub`** 查看Gitee的SSH Key，复制`ssh`开头的那一串公钥，添加到查看Gitee的SSH仓库\n- 使用命令**`touch ~/.ssh/config`**，在`~/.ssh`文件夹下添加`config`文件，可以看到文件夹下面多了一个config文件, 右键使用记事本打开\n  ```bash\n  # github\n  Host github.com\n      HostName github.com\n      User xxx@github.com # 换成正确的邮箱地址\n      PreferredAuthentications publickey\n      IdentityFile ~/.ssh/github_rsa\n  # gitee\n  Host gitee.com\n      HostName gitee.com\n      User xxx@gitee.com # 换成正确的邮箱地址\n      PreferredAuthentications publickey\n      IdentityFile ~/.ssh/gitee_rsa\n  # Other。。。。\n  ```\n- 使用以下命令分别测试`GitHub`和`Gitee`，查看`SSH Key`是否添加成功。\n```bash\nssh -T git@gitee.com\nssh -T git@github.com\n```\n"},{"title":"echarts-graph-force力导向图配置","url":"/202307_echarts-graph-force力导向图配置/","content":"\n## 效果图\n![echarts-graph-force](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@latest/images/echarts-graph-force.png)\n\n## 源码html\n\n```html\n<!DOCTYPE html>\n<html lang=\"zh-CN\" style=\"height: 100%\">\n<head>\n  <meta charset=\"utf-8\">\n</head>\n<body style=\"height: 100%; margin: 0\">\n  <div id=\"container\" style=\"height: 100%\"></div>\n\n  <script type=\"text/javascript\" src=\"https://fastly.jsdelivr.net/npm/echarts@5.4.2/dist/echarts.min.js\"></script>\n  <!-- Uncomment this line if you want to dataTool extension\n  <script type=\"text/javascript\" src=\"https://fastly.jsdelivr.net/npm/echarts@5.4.2/dist/extension/dataTool.min.js\"></script>\n  -->\n  <!-- Uncomment this line if you want to use gl extension\n  <script type=\"text/javascript\" src=\"https://fastly.jsdelivr.net/npm/echarts-gl@2/dist/echarts-gl.min.js\"></script>\n  -->\n  <!-- Uncomment this line if you want to echarts-stat extension\n  <script type=\"text/javascript\" src=\"https://fastly.jsdelivr.net/npm/echarts-stat@latest/dist/ecStat.min.js\"></script>\n  -->\n  <!-- Uncomment this line if you want to use map\n  <script type=\"text/javascript\" src=\"https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/china.js\"></script>\n  <script type=\"text/javascript\" src=\"https://fastly.jsdelivr.net/npm/echarts@4.9.0/map/js/world.js\"></script>\n  -->\n  <!-- Uncomment these two lines if you want to use bmap extension\n  <script type=\"text/javascript\" src=\"https://api.map.baidu.com/api?v=3.0&ak=YOUR_API_KEY\"></script>\n  <script type=\"text/javascript\" src=\"https://fastly.jsdelivr.net/npm/echarts@5.4.2/dist/extension/bmap.min.js\"></script>\n  -->\n\n  <script type=\"text/javascript\">\n    var dom = document.getElementById('container');\n    var myChart = echarts.init(dom, null, {\n      renderer: 'canvas',\n      useDirtyRect: false\n    });\n    var app = {};\n    \n    var option;\n\n    var graph = {\n  nodes:[\n  // { name: \"数据的分析\", category:\"第十章\", draggable:true,symbolSize:[50, 50],itemStyle:{ color: \"\"}},\n    { name: \"八年级数学知识结构体系\", category:0, symbolSize:[120, 120] },\n    { name: \"三角形\", category:\"第二章\", symbolSize:[50, 50] },\n    { name: \"全等三角形\", category:\"第三章\", draggable:true, symbolSize:[50, 50]},\n    { name: \"轴对称\", category:\"第四章\", symbolSize:[50, 50]},\n    { name: \"整式的乘法与因式分解\", category:\"第五章\",  symbolSize:[80, 80]},\n    { name: \"分式\", category:\"第六章\", symbolSize:[50, 50]},\n    { name: \"二次根式\", category:\"第七章\", symbolSize:[50, 50]},\n    { name: \"勾股定理\", category:\"第八章\", symbolSize:[50, 50],},\n    { name: \"平行四边形\", category:\"第九章\", symbolSize:[50, 50]},\n    { name: \"一次函数\", category:\"第十章\", symbolSize:[50, 50]},\n    { name: \"数据的分析\", category:\"第十章\", symbolSize:[50, 50]},\n    { name: \"单独\", category:10, symbolSize:[50, 50]},\n    { name: \"单独2\", category: 10, symbolSize:[50, 50]},\n    { name: \"单独3\", category: 10, symbolSize:[50, 50]},\n    { name: \"单独4\", category: 10, symbolSize:[50, 50]},\n  ],\n  categories: [\n    {name: '第一章'},\n    {name: '第二章'},\n    {name: '第三章'},\n    {name: '第四章'},\n    {name: '第五章'},\n    {name: '第六章'},\n    {name: '第七章'},\n    {name: '第八章'},\n    {name: '第九章'},\n    {name: '第十章'},\n    {name: 10},\n  ],\n  links: [\n    {source: \"八年级数学知识结构体系\", target: \"三角形\", category:\"第一章\"},\n    {source: \"八年级数学知识结构体系\",target: \"全等三角形\", category:\"第二章\"},\n    {source: \"八年级数学知识结构体系\",target: \"轴对称\", category:\"第三章\"},\n    {source: \"八年级数学知识结构体系\",target: \"整式的乘法与因式分解\", category:\"第四章\"},\n    {source: \"八年级数学知识结构体系\",target: \"分式\", category:\"第五章\"},\n    {source: \"八年级数学知识结构体系\",target: \"二次根式\", category:\"第六章\"},\n    {source: \"八年级数学知识结构体系\",target: \"勾股定理\", category:\"第七章\"},\n    {source: \"八年级数学知识结构体系\",target: \"平行四边形\", category:\"第八章\"},\n    {source: \"八年级数学知识结构体系\",target: \"一次函数\", category:\"第九章\"},\n    {source: \"八年级数学知识结构体系\",target: \"数据的分析\", category:\"第十章\"},\n    {source: \"分式\",target: \"单独2\", category:\"第十章\"},\n    {source: \"单独\",target: \"单独2\", category:10},\n    {source: \"单独3\",target: \"单独4\", category:10},\n  ]\n\n}\n\nvar option = {       \n    animationDurationUpdate: 1500,        \n    animationEasingUpdate: 'quinticInOut',\n    tooltip: {show: true},\n    color: ['#09C3D8','#15C27D','#9188FF','#0597FD', '#F0627F','#FE9F3D','#63AED3','#0597FD','#F87A57','#54AC56','#BA6EC8'],\n    legend:{show: true, orient: 'vertical', left: 0, top:0,type:'scroll',icon: 'circle',itemStyle:{borderColor: '#fff',borderWidth:2},itemGap: 8},\n    grid: {top: '80px'},\n    series: [\n      {\n        type: 'graph',\n        layout: 'force',            \n        symbol: 'circle',\n        zoom: 1.5,\n        draggable: true, // 节点是否可拖拽\n        hoverAnimation: true, \n        roam: true, // 开启鼠标缩放平移\n        focusNodeAdjacency:true, // 鼠标移上去突出显示节点\n        symbolSize: 40,\n       \n        // 节点标签\n        label: {\n          normal: {\n            show: true,\n            position: 'inside',//设置label显示的位置\n            // formatter: '{c}',//设置label读取的值为value\n            // 字符串模板 模板变量有：\n            // {a}：系列名。\n            // {b}：数据名。\n            // {c}：数据值。\n            // {@xxx}：数据中名为 'xxx' 的维度的值，如 {@product} 表示名为 'product' 的维度的值。\n            // {@[n]}：数据中维度 n 的值，如 {@[3]} 表示维度 3 的值，从 0 开始计数。\n            // 示例：\n            // formatter: '{b}: {@score}'\n            formatter: function({name}) {\n              return echarts.format.truncateText(name, 90, '14px Microsoft Yahei', '…');\n            },\n            textStyle: {\n              fontSize: 12,\n              color:'#fff'\n            }\n          }\n        },\n        emphasis: { //高亮状态的图形样式,v5.0版本及以上\n          focus: 'adjacency',\n          // lineStyle: {\n          //   type: 'solid',\n          //   width: 3,\n          // },\n          // itemStyle: {\n          //   color: '#dfeaff',\n          //   borderWidth: 4,\n          //   borderColor: '#4572d9',\n          //   borderJoin: 'round'\n          // }\n        },\n        edgeSymbol: ['none', 'arrow'],\n        edgeSymbolSize: [4, 13],\n        edgeLabel: { // 连接两个关系对象的线上的标签\n          show: true,\n          position: 'middle',\n          textStyle: {fontSize: 10,color: '#909399'},\n          formatter: function(param) {\n            return param.data.category\n          }\n        },\n        // 关系边公用线条样式, 其中lineStyle.color 支持设置为 \"source\" 或者 \"target\"\n        lineStyle: {\n          color: 'source',\n          type: 'dashed',\n          opacity: 0.3,\n          curveness: 0.4 // 边的曲度， 支持从0 ~1，值越大曲度越大。默认 0\n        },           \n        //力引导图相关配置\n        force: {\n          repulsion: 300,\n          gravity: 0.1,\n          edgeLength: [260, 20],\n          layoutAnimation: true,\n          friction: 0.3 // 移动速度\n        },\n        // 数据\n        data: graph.nodes,\n        categories: graph.categories,            \n        links: graph.links, // 建立关系\n        animationDelay: function (idx) {\n          return idx * 1000;\n        },\n        animationDuration: function (idx) {\n          // 越往后的数据延迟越大\n          return idx * 1000;\n        },\n        animationDurationUpdate: function (idx) {\n          // 越往后的数据延迟越大\n          return idx * 1000;\n        }, animationDelayUpdate: function (idx) {\n          // 越往后的数据延迟越大\n          return idx * 1000;\n        },\n      }\n    ],\n  }\n \n    option &&  myChart.setOption(option);\n    myChart.off('click') // 渲染点击事件之前先清除点击事件，解决echarts多个点击事件的重复调用\n    myChart.on('click', transIndex.bind(this))\n    function transIndex(param) {\n      console.log(param)\n      alert('单击事件')\n    }\n\n\n    if (option && typeof option === 'object') {\n      myChart.setOption(option);\n    }\n\n    window.addEventListener('resize', myChart.resize);\n  </script>\n</body>\n</html>\n```\n\n","tags":["图表"],"categories":["前端"]},{"title":"hexo博客添加留言板","url":"/202307_hexo博客添加留言板/","content":"\n> 在网站中启用 [Waline](https://waline.js.org/guide/get-started/) 提供评论与浏览量服务。\n\n## LeanCloud 设置 (数据库)\n\n1. [登录open in new window](https://console.leancloud.app/login) 或 [注册open in new window](https://console.leancloud.app/register) `LeanCloud 国际版` 并进入 [控制台open in new window](https://console.leancloud.app/apps)\n\n   > 国内版需要域名备案，比较麻烦。国际版需要翻墙软件支持，这里推荐\n   >\n   > 微软自带的Edge浏览器，添加扩展插件[Hola Free VPN Proxy Unblocker - Best VPN](https://microsoftedge.microsoft.com/addons/detail/hola-free-vpn-proxy-unblo/eibinhpjpbkmjeohlclnebmkhdfehpbf?hl=zh-CN)\n\n2. 点击左上角 [创建应用open in new window](https://console.leancloud.app/apps) 并起一个你喜欢的名字 (请选择免费的开发版):\n\n   ![创建应用](https://waline.js.org/assets/leancloud-1-f7a36b20.png)创建应用\n\n3. 进入应用，选择左下角的 `设置` > `应用 Key`。你可以看到你的 `APP ID`,`APP Key` 和 `Master Key`。请记录它们，以便后续使用。\n\n   ![ID 和 Key](https://waline.js.org/assets/leancloud-2-4cc69975.png)\n\n## Vercel 部署 (服务端)\n\n[![Vercel](https://vercel.com/button)open in new window](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fwalinejs%2Fwaline%2Ftree%2Fmain%2Fexample)Vercel\n\n1. 点击上方按钮，跳转至 Vercel 进行 Server 端部署。\n\n   > 如果你未登录的话，Vercel 会让你注册或登录，请使用 GitHub 账户进行快捷登录。\n   >\n   > 授权注册时提示Github账户被锁，给 support@vercel.com 发封邮件解封\n\n2. 输入一个你喜欢的 Vercel 项目名称并点击 `Create` 继续:\n\n   ![创建项目](https://waline.js.org/assets/vercel-1-4e9dd7aa.png)\n\n3. 此时 Vercel 会基于 Waline 模板帮助你新建并初始化仓库，仓库名为你之前输入的项目名。\n\n   ![deploy](https://waline.js.org/assets/vercel-3-0918fcee.png)\n\n   一两分钟后，满屏的烟花会庆祝你部署成功。此时点击 `Go to Dashboard` 可以跳转到应用的控制台。\n\n4. 点击顶部的 `Settings` - `Environment Variables` 进入环境变量配置页，并配置三个环境变量 `LEAN_ID`, `LEAN_KEY` 和 `LEAN_MASTER_KEY` 。它们的值分别对应上一步在 LeanCloud 中获得的 `APP ID`, `APP KEY`, `Master Key`。\n\n![设置环境变量](https://waline.js.org/assets/vercel-5-3a5de7f0.png)\n\n> 注 ：如果你使用 LeanCloud 国内版，请额外配置 `LEAN_SERVER` 环境变量，值为你绑定好的域名。\n\n5. 环境变量配置完成之后点击顶部的 `Deployments` 点击顶部最新的一次部署右侧的 `Redeploy` 按钮进行重新部署。该步骤是为了让刚才设置的环境变量生效。\n\n![redeploy](https://waline.js.org/assets/vercel-6-c1af01b1.png)\n\n6. 此时会跳转到 `Overview` 界面开始部署，等待片刻后 `STATUS` 会变成 `Ready`。此时请点击 `Visit` ，即可跳转到部署好的网站地址，此地址即为你的服务端地址。\n\n![redeploy success](https://waline.js.org/assets/vercel-7-2478902b.png)\n\n## 绑定域名 (可选)\n\n1. 点击顶部的 `Settings` - `Domains` 进入域名配置页\n\n2. 输入需要绑定的域名并点击 `Add`\n\n   ![Add domain](https://waline.js.org/assets/vercel-8-49378bd3.png)Add domain\n\n3. 在域名服务器商处添加新的 `CNAME` 解析记录\n\n   | Type  | Name    | Value                |\n   | ----- | ------- | -------------------- |\n   | CNAME | example | cname.vercel-dns.com |\n\n4. 等待生效，你可以通过自己的域名来访问了🎉\n\n   - 评论系统：example.yourdomain.com\n   - 评论管理：example.yourdomain.com/ui\n\n   ![success](https://waline.js.org/assets/vercel-9-a29236ac.png)\n\n## HTML 引入 (客户端)\n\n在你的网页中进行如下设置:\n\n1. 导入 Waline 样式 `https://unpkg.com/@waline/client@v2/dist/waline.css`。\n\n2. 创建 `<script>` 标签使用来自 `https://unpkg.com/@waline/client@v2/dist/waline.mjs` 的 `init()` 函数初始化，并传入必要的 `el` 与 `serverURL` 选项。\n\n   - `el` 选项是 Waline 渲染使用的元素，你可以设置一个字符串形式的 CSS 选择器或者一个 HTMLElement 对象。\n   - `serverURL` 是服务端的地址，即上一步获取到的值。\n\n   ```html\n   <head>\n     <!-- ... -->\n     <link\n       rel=\"stylesheet\"\n       href=\"https://unpkg.com/@waline/client@v2/dist/waline.css\"\n     />\n     <!-- ... -->\n   </head>\n   <body>\n     <!-- ... -->\n     <div id=\"waline\"></div>\n     <script type=\"module\">\n       import { init } from 'https://unpkg.com/@waline/client@v2/dist/waline.mjs';\n   \n       init({\n         el: '#waline',\n         serverURL: 'https://your-domain.vercel.app',\n       });\n     </script>\n   </body>\n   ```\n\n3. 评论服务此时就会在你的网站上成功运行 🎉\n\n## [评论管理 (管理端)](https://waline.js.org/guide/get-started/#评论管理-管理端)\n\n1. 部署完成后，请访问 `<serverURL>/ui/register` 进行注册。首个注册的人会被设定成管理员。\n2. 管理员登陆后，即可看到评论管理界面。在这里可以修改、标记或删除评论。\n3. 用户也可通过评论框注册账号，登陆后会跳转到自己的档案页。\n\n\n\n> 国内不能访问`vercel.app`，导致博主现在都还没弄成功，网上搜了一堆，说是要买域名，难受哇😭\n\n","tags":["Hexo"],"categories":["前端"]},{"title":"对数组进行分类","url":"/202307_对数组进行分类/","content":"\n假设我们有一个员工列表，其中每个员工都是一个具有 2 个属性的对象：name 和 age。\n\n```javascript\nconst people = [\n  { name: 'Alice', age: 21 },\n  { name: 'Max', age: 20 },\n  { name: 'Jane', age: 20 }\n];\n```\n\n现在，我们需要对其进行按 age 分类，最终实现输出结果如下：\n\n\n\n```javascript\nconst groupedPeople = {\n  20: [\n    { name: 'Max', age: 20 },\n    { name: 'Jane', age: 20 }\n  ],\n  21: [\n    { name: 'Alice', age: 21 }\n  ]\n}\n```\n\n通常的方法是使用 array.reduce()，reduce() 方法对数组中的每个元素按序执行一个由您提供的 reducer 函数，每一次运行 reducer 会将先前元素的计算结果作为参数传入，最后将其结果汇总为单个返回值。鉴于此，可以借其实现一个 groupBy 函数：\n\n\n\n```javascript\nfunction groupBy(objectArray, property) {\n  return objectArray.reduce(function (acc, obj) {\n    let key = obj[property]\n    if (!acc[key]) {\n      acc[key] = []\n    }\n    acc[key].push(obj)\n    return acc\n  }, {})\n}\n\nconst groupedPeople = groupBy(people, 'age')\n// groupedPeople is:\n// {\n//   20: [\n//     { name: 'Max', age: 20 },\n//     { name: 'Jane', age: 20 }\n//   ],\n//   21: [\n//    { name: 'Alice', age: 21 }\n//   ]\n// }\n```\n\n为了简化我们的代码，数组又提供了一个新的方法来对数组按属性进行分类：Array.prototype.groupBy()。\n\n\n\n```javascript\nconst groupedPeople = people.groupBy(({ age }) => age)\n// groupedPeople is:\n// {\n//   20: [\n//     { name: 'Max', age: 20 },\n//     { name: 'Jane', age: 20 }\n//   ],\n//   21: [\n//    { name: 'Alice', age: 21 }\n//   ]\n// }\n```\n\n同时也支持按条件自定义分类：\n\n\n\n```javascript\nconst groupedPeople = people.groupBy(({ age }) => age <= 20? 'a': 'b')\n// groupedPeople is:\n// {\n//   'a': [\n//     { name: 'Max', age: 20 },\n//     { name: 'Jane', age: 20 }\n//   ],\n//   'b': [\n//    { name: 'Alice', age: 21 }\n//   ]\n// }\n```\n\n如果需要对数组按属性分类，欢迎使用新的数组方法。","tags":["JS"],"categories":["前端"]},{"title":"利用html2canvas插件导出页面指定内容图片","url":"/202305_利用html2canvas插件导出页面指定内容图片/","content":"\n- 安装插件\n\n```bash\nnpm install --save html2canvas // yarn add html2canvas\n```\n\n-  引入插件，给导出内容部分添加ref标记\n\n- 关键代码\n\n  ```javascript\n  import html2canvas from 'html2canvas';\n  \n  export default {\n    onExport() {\n        const clientWidth = this.$refs.imageWrapper.offsetWidth;\n        const clientHeight = this.$refs.imageWrapper.offsetHeight;\n        const wh = [clientWidth, clientHeight];\n  \n        html2canvas(this.$refs.imageWrapper, { useCORS: true, logging: \ttrue }).then((canvas) => {\n          const dataURL = canvas.toDataURL('image/png');\n          this.download(dataURL, wh);\n        });\n      },\n       getUrlBase64(url, wh) {\n        return new Promise((resolve) => {\n          let canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d');\n          const img = new Image();\n          img.crossOrigin = 'Anonymous'; // 允许跨域\n          img.src = url;\n          img.onload = () => {\n            // eslint-disable-next-line prefer-destructuring\n            canvas.height = wh[1];\n            // eslint-disable-next-line prefer-destructuring\n            canvas.width = wh[0];\n            ctx.drawImage(img, 0, 0, wh[0], wh[1]);\n            const dataURL = canvas.toDataURL('image/png');\n            canvas = null;\n            resolve(dataURL);\n          };\n        });\n      },\n      download(imgUrl, wh) {\n        this.getUrlBase64(imgUrl, wh).then((base64) => {\n          const link = document.createElement('a');\n          link.href = base64;\n          link.download = `自定义图片名字.png`;\n          link.click();\n        });\n      },\n  }\n  ```\n  - 修改背景图片\n\n    ```javascript\n     html2canvas(this.$refs.imageDom, {\n    \tbackgroundColor: null // null 表示设置背景为透明色\n     })\n    ```\n\n  - 部分css的样式不能识别\n\n    1）背景混合模式\n\n    2）边框图像\n\n    3）盒子装饰打破\n\n    4）盒子阴影\n\n    5）筛选\n\n    6）字体变体连字\n\n    7）混合模式\n\n    8）对象适合\n\n    9）重复线性梯度\n\n    10）写作模式\n\n    11）飞涨\n\n    \n\n    ","tags":["vue"],"categories":["前端"]},{"title":"html2canvas图片跨域、背景透明配置","url":"/202305_html2canvas图片跨域、背景透明配置/","content":"\n```javascript\nhtml2canvas(dom, {\n    useCORS: true, // 图片跨域\n    backgroundColor: \"rgba(0,0,0,0)\", // 背景透明\n    scale: window.devicePixelRatio\n})\n```\n\n图片跨域问题\n\n1. img标签的crossorigin=\"anonymous\"\n\n2. useCORS: true \n\n以上2个属性缺一不可\n\n通过上面的两行代码就能解决html2canvas图片跨域问题\n\n\n\n","categories":["前端"]},{"title":"css常用tips","url":"/202303_css常用tips/","content":"\n### 文字两端对齐\n```css\n.name {\n    display: inline-block;\n    text-align: justify;\n    text-align-last: justify;\n}\n```\n\n\n\n### 关闭按钮\n\n效果图\n\n![](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@latest/images/close1.png)\n\nhtml\n\n```html\n<span class=\"icon\">\n  <i class=\"el-icon-close\"/>\n</span>\n```\n\ncss\n\n```css\n.icon {\n  width: 50px;\n  height: 50px;\n  background: #FF9D47;\n  box-shadow: 0px 2px 10px 0px rgba(201, 181, 169, 0.5);\n  border-radius: 0px 0px 0px 86px;\n  margin-left: auto;\n  color: #fff;\n  font-size: 22px;\n}\n.icon i{\n  margin: 10px 0px 0px 20px;  \n}\n```\n\n","tags":["css"],"categories":["前端"]},{"title":"css伪类样式效果合集","url":"/202303_css伪类样式效果合集/","content":"\n## 文字添加前置后置样式\n\n**效果图如下**\n\n![image-20230321162341730](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230321162341730.png)\n\n\n\n```css\n.name{\n    font-weight: bold;\n    color: #333333;\n    position: relative;\n    font-size: 34px;\n    margin-top: 300px;\n    z-index:0\n}\n// 文字前方块\n.name::before {\n    position:absolute;\n    content: '';\n    width: 21px;\n    height: 21px;\n    background: #1678FF;\n    border-radius: 1px;\n    left: -40px;\n    bottom: 9px;\n    transform: rotate(45deg);            \n}\n// 文字后数字\n.name::after {\n    position:absolute;\n    content: '01';\n    color: #F3F4FE;\n    font-size: 90px;\n    left: 0;\n    z-index: -1;\n    bottom: -19px;\n}\n```\n\n**进阶**\n\n> 修改伪类content内容\n\n- html\n\n  ```html\n  <div class=\"name\" data-content-after=\":after\">我是标题</div>\n  ```\n\n- css  \n\n    ```diff\n    .name::after {\n        position:absolute;\n    +   content: attr(data-content-after);\n        color: #F3F4FE;\n        font-size: 90px;\n        left: 0;\n        z-index: -1;\n        bottom: -19px;\n    }\n    ```\n\n- js\n\n  ```js\n  // 单个修改\n  $('.name').attr('data-content-after', '测试')\n\n  // 列表循环动态修改伪类中的值\n  let i = 0\n  $('.parent-div').each(() => {\n      i++\n      $('.name'+i).attr('data-content-after','0'+i)\n  })\n  ```\n  \n\n## 消息框\n\n**方法一：效果图**\n\n![image-20230323171243242](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230323171243242.png)\n\n```css\n.message-box {\n    position: relative;\n    display: flex;\n    align-items: center;\n    width: 300px;\n    height: 80px;\n    background: #0B46F0;\n    color: #FFFFFF;    \n    border-radius: 10px;\n    border: 1px solid #589DFF;    \n    padding-left: 20px;\n}\n.message-box::before {\n    content: '';\n    position: absolute;\n    background: #0B46F0;\n    border-bottom: 1px solid;\n    border-left: 1px solid;\n    border-color: #589DFF;\n    left: -7px;\n    width: 12px;\n    height: 12px;\n    top: 20%;\n    transform: rotate(45deg);\n}\n```\n\n方法二：伪元素+border实现+整体阴影\n\n**效果图**\n\n![image-20230526155310638](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230526155310638.png)\n\n```html\n<div class=\"pop-with-border\">\n  <p>filter:drop-shadow实现整体阴影</p>\n</div>\n```\n\n```css\n.pop-with-border {\n    margin: 30px;\n    width: 200px;\n    height: 100px;\n    padding: 10px;\n    background: #fff;\n    border-radius: 8px;\n    position: relative; \n    border: 1px solid #1678ff;\n    filter: drop-shadow(0 0 5px #ccc);\n}\n.pop-with-border:before,\n.pop-with-border:after {\n  top: -8px;\n  border: 8px solid transparent;\n  border-top: 0;\n  border-bottom-color: #fff;\n  content: \"\";\n  display: block;\n  width: 0;\n  height: 0;\n  left: 16px;\n  overflow: hidden;\n  position: absolute;\n  z-index: 101;\n}\n.pop-with-border:before {\n  top: -9px;\n  border-bottom-color: #1678ff;\n  z-index: 99;\n}\n.pop-with-border p {\n    padding: 10px 20px;\n}\n```\n\n\n\n## 弧形卡片\n\n### 内弧\n\n- 效果图\n\t\n\t![image-20230329110307068](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230329110307068.png)\n\t\n- 代码\n\n  ```html\n  <div class=\"card\">\n  \t<div class=\"head\"></div>\n  </div>\n  ```\n\n  ```css\n  .card {\n      height: 466px;\n      background: #FFFFFF;\n      box-shadow: 0px 2px 10px 0px rgba(0,123,255,0.18);\n      border-radius: 10px;\n  }\n  /* 关键代码 */\n  .head {\n      position: relative;\n      height: 142px;\n      width: 270px;\n      color: #fff;\n      text-align: center;\n      border-radius: 10px 10px 0 0;\n      background: linear-gradient(270deg, #F5AA07 0%, #FBD353 100%);\n  }\n  .head::after{\n  \tcontent: '';\n      position: absolute;\n      background: #fff;\n      height: 8px;\n      border-radius: 50% 50% 0 0;\n      bottom: 0;\n      left: 0;\n      width: 100%;\n  }\n  ```\n\n  \n\n### 外弧\n\n- 效果图\n\n  ![image-20230329111659643](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230329111659643.png)\n\n- 代码区别部分\n\n  ```diff\n  .head::after{\n  \tcontent: '';\n      position: absolute;\n  +   background: linear-gradient(270deg, #F5AA07 0%, #FBD353 100%);\n  +   height: 10px;\n  +   border-radius: 0 0 50% 50%;\n  +   bottom: -10px;\n      left: 0;\n      width: 100%;\n  }\n  ```\n\n  \n\n### 弧形背景\n\n效果图\n\n![image-20240516100035357](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@latest/images/image-20240516100035357.png)\n\n```html\n<!-- html -->\n<div class=\"top-content\"></div>\n```\n\n```css\n// css\n.top-content {\n  width: 100%;\n  height: 320px;\n  position: relative;\n  overflow: hidden;\n}\n\n.top-content::after {\n  content: '';\n  width: 120%;\n  height: 320px;\n  position: absolute;\n  left: -10%;\n  top: 0;\n  border-radius: 0 0 30% 30%;\n  background: #1678ff;\n}\n```","tags":["css"],"categories":["前端"]},{"title":"google镜像","url":"/202302_google镜像/","content":"\n**使用镜像时，切记勿进行登录等敏感操作。**\n\n**本文更新2023年2月的镜像站链接。**\n\n\n\n***01谷歌搜索***\n\nhttps://google.mirrors.pw/\n\nhttps://search.aust.cf/\n\nhttps://search.ecnu.cf/\n\nhttps://search.ahau.cf/\n\nhttps://search.ahnu.cf/\n\nhttps://search.njau.cf/\n\nhttps://note.cm/\n\nhttps://google.uitsrt.top/\n\nhttps://search.aust.cf/\n\nhttps://txt.muxinghe.ga/\n\n\n\n***02谷歌学术***\n\nhttps://scholar.mirrors.pw/\n\nhttps://sc.panda321.com/\n\nhttps://xueshu.studiodahu.com/\n\nhttps://scholar.lanfanshu.cn/","tags":["google镜像"],"categories":["工具"]},{"title":"css伪类画tree","url":"/202302_css伪类画tree/","content":"\n![image-20230223175330523](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230223175330523.png)\n\n```html\n<template>\n<div class=\"task\">\n  <div class=\"com-name\">XXXXXXXXX有限公司</div>\n  <van-collapse accordion v-model=\"active\">\n    <van-collapse-item v-for=\"(item,index) in 10\" :name=\"index\" :key=\"index\" class=\"card-box\">\n      <div slot=\"title\">\n        <div class=\"name\">任务{{index+1}} 名称</div> \n        <div class=\"desc\">          \n          <span class=\"state text-success\" v-if=\"index==3\">已完成</span>\n          <span class=\"state text-blue\" v-else-if=\"index==2\">进行中</span>\n          <span class=\"state text-orange\" v-else>未开始</span>\n          <span class=\"time\">耗时：5分12秒</span>\n        </div>\n      </div>\n      <div>\n        <div v-for=\"(j,cidx) in 4\" :key=\"cidx\">\n          <van-row class=\"m-bottom10 leaf-line\">\n            <van-col span=\"3\" style=\"color: #0DCA7C;\">——</van-col>\n            <van-col span=\"17\" class=\"\">\n              <div class=\"cname\">子任务{{ cidx +1 }} 测试</div>              \n              <div class=\"state text-success\" v-if=\"cidx==3\">已完成</div>\n              <div class=\"state text-blue \" v-else-if=\"cidx==2\">进行中</div>\n              <div class=\"state text-orange\" v-else>未开始</div>\n            </van-col>\n            <van-col span=\"4\">\n              <van-button @click=\"open(cidx)\" plain hairline type=\"info\" size=\"mini\">\n                填写</van-button>\n            </van-col>\n          </van-row>\n        </div>\n      </div>\n    </van-collapse-item>\n  </van-collapse>\n  <div style=\"height: 20px\"></div>\n</div>\n</template>\n\n<script>\nexport default {\n  data(){\n    return {\n      active: 0\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    open(cidx) {\n\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n.task {\n  background: linear-gradient(180deg, #3E82F7 0%, #F2F1F4 40%, #F3F5F7 60%);\n  height: calc(100vh - 42px);\n  overflow-y: auto;\n  padding-left: 14px;\n  padding-right: 14px;\n  .m-bottom10 {\n    margin-bottom:10px;\n  }\n  .com-name {\n    color: #fff;\n    font-size: 18px;\n    font-weight: bold;\n    padding-top: 23px;\n    margin-bottom: 15px;\n    margin-left: 10px;\n  }\n  .card-box {\n    background-color: #fff;\n    border-radius: 8px;\n    padding: 5px 0;\n    margin-bottom: 10px;\n    .name {\n      font-size: 15px;\n      color: #333333;\n      font-weight: bold;\n      margin-left: 16px;\n      &::before {\n        content: '';\n        position: absolute;\n        width: 6px;\n        height: 20px;\n        background: #10CFBB;\n        border-radius: 8px;\n        left: 14px;\n      }      \n    }\n    .desc {\n      font-weight: 400;\n      margin-left: 14px;\n      .state {\n        margin-right: 10px;\n        font-size: 12px;\n      }\n      .time {\n        color: #666666;\n        font-size: 12px;\n      }\n    }\n    .leaf-line{\n      .cname {\n        font-weight: bold;\n        position: relative;\n        &::before {\n          content: '';\n          position: absolute;\n          width: 6px;\n          height: 6px;\n          background: #10CFBB;\n          border-radius: 10px;\n          top: 8px;\n          left: -12px;\n        }\n      }\n      .state {\n        font-size: 12px;\n      }\n       /*竖线*/\n      &:before{\n        content: \"\";\n        position: absolute;\n        width: 1px;\n        height: calc(100% - 69px);\n        left: 16px;\n        top: 15px;\n        border-width: 1px;\n        border-left: 1px solid #10CFBB;\n        z-index: 0;\n      }\n    }\n    .van-collapse-item__content {\n      color: #333;\n    }\n    .van-cell__left-icon, .van-cell__right-icon{\n      color: #333;\n      border: 2px solid #D9D9D9;\n      border-radius: 50%;\n      padding: 0 2px;\n      height: 18px;\n      font-size: 14px;\n      line-height: 18px;\n    }\n    .van-button--mini {\n      padding: 0 10px;\n    }\n    .text-orange {\n      color: #FD993E;\n    }\n    .text-blue {\n      color: #1678ff;\n    }\n    .text-success {\n      color: #0DCA7C;\n    }\n  }\n  \n}\n</style>\n```\n\n","tags":["css"],"categories":["前端","css"]},{"title":"Edge常用插件","url":"/202302_Edge常用插件/","content":"\n## Microsoft Edge 常用插件\n\n- [网页万能复制 ](https://microsoftedge.microsoft.com/addons/detail/网页万能复制/begnnhinicgbdndoigdpfohfagccaakc)\n- [AdGuard 广告拦截器](https://microsoftedge.microsoft.com/addons/detail/adguard-%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA%E5%99%A8/pdffkfellgipmhklpdmokmckkkfcopbh?hl=zh-CN)\n- [Vidline 屏幕录像和录屏助手](https://microsoftedge.microsoft.com/addons/detail/vidline-屏幕录像和录屏助手/ejamopipfiecmalniogdhegbhidabnkd)\n- [捕捉网页截图 -可保存为PDF、PNG](https://microsoftedge.microsoft.com/addons/detail/捕捉网页截图-fireshot的/fcbmiimfkmkkkffjlopcpdlgclncnknm)\n- [Microsoft 编辑器:拼写和语法检查器 - 适用于网页发邮件](https://microsoftedge.microsoft.com/addons/detail/microsoft-编辑器拼写和语法检查器/hokifickgkhplphjiodbggjmoafhignh)\n- [暴力猴 -和油猴类似](https://microsoftedge.microsoft.com/addons/detail/暴力猴/eeagobfjdenkkddmbclomhiblgggliao)\n  - [安装及使用方法](https://zhuanlan.zhihu.com/p/437836654)\n\n","tags":["电脑","浏览器","插件"],"categories":["软件"]},{"title":"Vue面试","url":"/202302_Vue面试/","content":"> 答案抽空整理放在另外的长文档网址\n\n1、 谈谈你对vue的理解；\n\n2、 谈谈你对SPA的理解；\n\n3、 vue为什么需要虚拟dom；\n\n4、 谈一谈对vue组件化的理解；\n\n5、 既然vue通过数据劫持可以精准探测数据变化，为什么还要虚拟dom进行diff检测差异；\n\n6、 请说一下你对响应式数据的理解；\n\n7、 vue中如何检测数组变化；\n\n8、 vue如何进行依赖收集；\n\n9、 Vue.set方法是如何实现的；\n\n10、 V-if 和v-show  的优先级\n\n11、 Watch & computed；\n\n12、 解释ref和reactive区别；\n\n13、 watch和watchEffect的区别；\n\n14、 如何将template转换render函数；\n\n15、 new Vue()过程中做了些什么？\n\n16、 Vue.observable 你有了解过？\n\n17、 V-if 和 v-for 哪个优先级更高；\n\n18、 生命周期有哪些；\n\n19、 Vue 中 diff 算法原理；\n\n20、 请说明Vue 中 key 的作用和原理，谈谈你对它的理解；\n\n21、 Vue.use 是干什么的？\n\n22、 Vue.extend 方法的作用？\n\n23、 Vue 组件 data 为什么必须是个函数？\n\n24、 函数组件的优势\n\n25、 Vue 中的过滤器了解？过滤器的应用场景\n\n26、 v-once的使用场景；","tags":["Vue","面试"],"categories":["前端"]},{"title":"深度清理电脑C盘","url":"/202302_ 深度清理电脑C盘/","content":"\n> 台式电脑为例\n\n## 1、关闭休眠模式（笔记本电脑请跳过该步骤）\n\n```bash\n# 管理员模式下打开命令行，笔记本电脑不适用，会影响合盖\npowercfg -h off\n```\n\n## 2、存储设置模块清理\n\n> 开始→设置→系统→存储，清理不需要的软件和临时文件\n\n- **应用和功能** \n- **临时文件清理**\n\n![image-20230216152810687](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230216152810687.png)\n\n\n\n## 3、CCleaner\n\n传送门：https://www.ccleaner.com/zh-cn\n\n![image-20230216153330013](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230216153330013.png)\n\n## 4、Dism++\n\n传送门：[https://dism.cf/](https://dism.cf/)\n\n- **选项=》详细设置**：启用专家模式，选择最佳性能压缩\n\n![image-20230216152113464](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/image-20230216152113464.png)\n\n- 点击**空间回收**，开始清理","tags":["电脑"],"categories":["Other"]},{"title":"Hexo搭建博客-butterfly主题","url":"/202302_Hexo搭建博客-butterfly主题/","content":"\n# Hexo搭建博客-butterfly主题\n\n### 注册Github [https://github.com](https://github.com/) 账号\n\n需要一个邮箱作为注册账号（注：请不要使用有QQ、手机号等有隐私信息邮箱，可在对应的邮箱申请自定义的英文邮箱）\n\n### Node.js安装\n\nhttps://www.runoob.com/nodejs/nodejs-install-setup.html\n\n### Git安装\n\n- 下载地址 [https://git-scm.com/download 默认选项安装即可\n\n- 安装完成后，在开始菜单里找到“Git”->“Git Bash”，蹦出一个类似命令行窗口的东西，就说明Git安装成功！\n\n- 安装完成后，还需要最后一步设置，在命令行输入：\n\n  ```bash\n  git config --global user.name \"GitHub用户名\"\n  git config --global user.email \"GitHub注册邮箱\"\n  ```\n  \n- 生成SSH KEY\n\n  ```bash\n  ssh-keygen -t rsa -C \"你的GitHub注册邮箱\"\n  ```\n  \n- Git 和github绑定\n\n  ```bash\n  vi .ssh/id_rsa.pub\n  ```\n  \n\n复制窗口中的密钥 新建一个txt文件看看有没有复制成功\n\n快捷键 `esc` `shift+`: `q` 退出文件编辑页面\n\n- 登录GitHub `settings`—>`SSH and GPG keys` —> `New SSH key`\n\n[![image-20210901144802754](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202109011448187.png)](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202109011448187.png)\n\n[![image-20210901145356161](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202109011453325.png)](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202109011453325.png)\n\n### **GitHub创建个人仓库**\n\n> 仓库名为：**用户名**.github.io 例：Gardennias.github.io\n\n[![image-20210901150408324](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202109011504245.png)](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202109011504245.png)\n\n### 安装 [Hexo](https://hexo.io/zh-cn/docs/)\n\n所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。\n\n```\nBASH\n复制成功$ npm install -g hexo-cli\n```\n\n### 进阶安装和使用\n\n对于熟悉 npm 的进阶用户，可以仅局部安装 `hexo` 包。\n\n```\nBASH\n$ npm install hexo\n```\n\n安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。\n\n```\nPLAINTEXT\n$ hexo init <folder>\n$ cd <folder>\n$ npm install\n```\n\n新建完成后，指定文件夹的目录如下：\n\n```\nPLAINTEXT\n.\n├── _config.landspace.yml\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n```\n\n### 安装主题butterfly\n\n进入项目根目录\n\n```powershell\ngit clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n```\n\n### 安装插件\n\n```\nnpm install hexo-renderer-pug --save\n```\n\n### _config.yml\n\n1. 网站的 [配置](https://hexo.io/zh-cn/docs/configuration) 信息，您可以在此配置大部分的参数。\n\n```\n# 设置主题为 butterfly\ntheme: butterfly\n\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\n## 设置发布仓库地址信息\ndeploy:\n type: git\n repo: git@github.com:[Username]/[Username].github.io.git\n branch: main\n```\n\n`repo` 更换成你创建项目GIT的地址\n\n\n\n2. 复制 butterfly 主题下的`_config.yml`内容，粘贴至`_config.landspace.yml`，重命名为_config.butterfly.yml\n\n\n\n**直接导入文章**\n\n可以将你平时写的文章直接导入到 `_posts` 文件夹里，注意文章类型得是 `md`格式。\n\n### Create a new post\n\n```bash\nhexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/zh-cn/docs/writing.html)\n\n### Run server\n\n```bash\nhexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n```bash\nhexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n```bash\nhexo deploy\n```\n","tags":["Hexo"],"categories":["前端"]},{"title":"hexo-theme-webstack_网址导航搭建","url":"/202302_hexo-theme-webstack-网址导航搭建/","content":"\n# hexo-theme-webstack 网址导航搭建\n\n[👉 **Hexo 文档**](https://hexo.io/zh-cn/index.html)\n\n**[👉 webstack官方文档](https://github.com/HCLonely/hexo-theme-webstack/blob/master/README_CN.md)**\n\n[👉**本项目Demo**](https://gardennias.github.io/navigation/)\n\n## 前言\n\n> 安装Hexo前需要安装Node.js、Git、Hexo，请查看相应的文档\n\n```bash\n# 安装hexo（管理员模式）\nnpm install -g hexo-cli\n\n# 创建项目文件夹navigation\nmkdir navigation\n# 进入文件夹\ncd navigation\n\n# 初始化hexo\nhexo init\n```\n\n## 安装`hexo-deployer-git`插件\n```\nnpm install hexo-deployer-git --save\n```\n\n## 下载theme-webstack\n\n### hexo >= 4.0\n\n```bash\ngit clone https://github.com/HCLonely/hexo-theme-webstack themes/webstack\n```\n\n### hexo >= 5.0 \n\n```bash\nnpm install hexo-theme-webstack -S\n```\n\n## 配置\n\n### hexo >= 4.0 \n\n将`themes/webstack/`目录内的`_config.example.yml`文件复制到`根目录/source/_data/`目录内，并重命名为`webstack.yml`\n\n### hexo >= 5.0 \n\n- 如果是新安装本主题，安装完成后会在根目录生成一个`_config.webstack.yml`文件，直接编辑`_config.webstack.yml`文件进行配置即可。\n- 如果是主题升级，可以使用 hexo >= 4.0 的配置方法，也可以将原来的配置文件移动到根目录，并重命名为`_config.webstack.yml`.\n\n> 注意：`博客根目录/_config.webstack.yml`和`博客根目录/source/_data/webstack.yml`请只保留一个！\n\n\n## project/_config.yml\n\n```diff\n# URL\n## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'\n+ url: https://username.github.io/project\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\n+ theme: webstack\n\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n+  type: git\n+  repo: <RepoGit>\n+  branch: gh-pages\n# 2020年10月后github<BranchName>默认为main\n```\n\n## 运行\n\n```bash\nhexo clean  #清空缓存\nhexo g\t\t#部署代码\nhexo s\t\t#预览效果\n```\n\n## 开启github页面\n\n进入 GitHub 刚建的仓库 \n\n👉 点击`Settings`👉 点击左侧栏`Pages`\n\n👉 点击`Source`     👉 选择默认代码分支master或main和默认的`/(root) `\n\n👉 点击`Save`。\n\n## 版本控制\n\n将网址导航的源码上传至项目仓库下的`Source`分支。\n\n备份项目代码目的是：\n\n- 魔改失败时可以拉取上一次提交的代码到本地。\n- 在外地没带自己电脑情况下，可以用其它电脑操作。\n- 具体操作：在<BlogRoot>下的Git Bash中输入\n\n```bash\ngit init  #初始化\ngit add .  #上传所有文件\ngit commit -m \"<Custom>\"  #提交时的注释，例如：\"update\"\ngit remote add origin <RepoGit>  #连接你仓库的Git地址，使Git Bash知道代码要上传至哪个仓库\ngit branch -M <BranchName>  #将默认master分支名改为你自己设置的\n#若第一次提交要加上\"-u\"，如下，这里推荐分支名为\"source\"\ngit push -u origin <BranchName>\n#若提交失败，显示：error: failed to push some refs to，则加上\"-f\"来强制提交\ngit push [-u] origin <BranchName> -f\n```\n\n## 部署\n\n```bash\nhexo clean\nhexo g && hexo d\n```\n\n## 项目页面\n\n如果你希望网站部署在 `<你的 GitHub 用户名>.github.io` 的子目录中：\n\n1. 开启你在 GitHub 的储存库，并前往 **Settings** 页面。更改你的 **Repository name** 使你的博客网址变成 **username.github.io/\\*repository\\***，*repository* 可以是任何名称，例如 *blog* 或 _hexo_。\n2. 编辑你的 **_config.yml**，将 `url:` 更改为 **https://\\*username\\*.github.io/\\*repository\\***。\n3. Commit 并 push 到默认分支上。\n4. 当部署完成后，在 `gh-pages` 分支可以找到生成的网页。\n5. 在 GitHub 储存库中，前往 **Settings** > **Pages** > **Branch**，改为 `gh-pages`branch ， 并将文件夹选择`/(root)` 后储存。\n6. 前往 *username*.github.io/*repository* 查看。","tags":["Hexo"],"categories":["前端"]},{"title":"Github图床图片无法加载","url":"/202302_Github图床图片无法加载/","content":"\n# Github图床图片无法加载\n\n> 使用PicGo+GitHub图床时图片上传成功，页面引用时无法加载，该问题是由于`Github`网站的raw.githubusercontent.com域名解析因为某种不可描述的原因污染了\n\n1、[https://www.ipaddress.com](https://www.ipaddress.com/)输入raw.githubusercontent.com，查询真实IP地址\n\n2、打开文件管理器，在地址栏输入` C:\\Windows\\System32\\drivers\\etc\\hosts`打开文件\n\n3、在文件最底部加入如下内容\n\n```dart\n# IP以最新查询到的为准\n185.199.111.133 raw.githubusercontent.com\n```\n\n4、刷新DNS，cmd进入命令行窗口，输入\n\n```bash\nipconfig/flushdns\n```\n","tags":["Other"],"categories":["Other"]},{"title":"眼保健操","url":"/202302_眼保健操/","content":"\n# 眼保健操\n\n> 什么情况不能做眼保健操?\n>\n> ➡眼部急性炎症、眼睛红肿、分泌物增多、急性传染性结膜炎(俗称“红眼病”）。\n\n<iframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=86 src=\"//music.163.com/outchain/player?type=2&id=500783198&auto=0&height=66\"></iframe>\n\n## 1、按揉攒竹穴，双眉头凹陷处\n\n![yan1](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/yan1.jpg)\n\n## 2、按压睛明穴，鼻骨两旁近眼内角处\n\n![yan2](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/yan2.jpg)\n\n## 3、按揉四白穴，下眼眶边缘下方的正中\n\n> 将两手食指和中指并拢，轻按在鼻翼两侧，大拇指并在下额凹陷处，随后放下中指，食指指尖所在的位置就是四白穴。力度：动作幅度不要太大\n\n![yan3](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/yan3.jpg)\n\n## 4、按揉太阳穴，刮上眼眶，\n\n> 穴位：在外眼角与眉梢之间、向后大约3厘米处的陷窝处\n>\n> 力度：适中，轻微酸胀感为宜。\n>\n> 大拇指保持在太阳穴位置上不动，用双手食指的第二个关节内侧，稍加用力从眉头刮到眉梢，两个节拍刮一次，连刮两次。如此交替，做四个八拍。\n\n![yan4](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/yan4.jpg)\n\n## 5、按揉风池穴\n\n> 位置：在颈后枕骨下，也就是两侧大筋脉外侧凹陷处。相当于耳垂水平。\n>\n> 操作手法：将双手食指和中指并拢，然后把螺纹面按在风池穴上，其余三指自然放松。\n\n![yan5](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/yan5.jpg)\n\n## 6、揉捏耳垂，脚趾抓地\n\n> 用双手大拇指和食指螺纹面，捏住耳垂正中眼穴，其余三指自然并拢弯曲，随音乐口令，有节奏地揉捏穴位，每拍揉捏一圈；\n>\n> 揉捏的同时，双脚的全部脚趾跟随节拍作抓地运动，每揉捏耳垂一圈，作抓地运动一次\n\n![yan6](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery/images/yan6.jpg)\n\n眼保健操结束后，要记得张开双眼，向窗外眺望远处1-2分钟喔~\n\n\n\n[阅读原文](https://m.thepaper.cn/newsDetail_forward_17375392)\n\n\n","tags":["Other"],"categories":["生活"]},{"title":"GIT常用命令","url":"/202302_GIT常用命令/","content":"\n# Git常用命令\n\n- 代码提交\n\n  ```bash\n  git init\n  git add .\n  git commit -m \"first commit\"\n  # 关联远程仓库\n  git remote add origin [https://github.com/xxxx/xxxx.git]\n  git push -u origin [branchName]\n  ```\n- config\n\n  ```bash\n  # 非全局配置\n  git config user.email \"your-email-address\"\n  git config user.name \"your-username\"\n  \n  # 全局配置\n  git config --global user.email \"your-email-address\"\n  git config --global user.name \"your-username\"\n  ```\n\n\n- 修改分支名称\n\n  ```bash\n  git branch -m [source] [target]\n  ```\n  \n- 删除本地分支、远程分支\n\n  ```bash\n  # 查询所有分支\n  git branch -a\n  # 切换到其他分支\n  git checkout [other_branch_name]\n  \n  # 删除本地分支,\n  # -d 会检查分支状态\n  # -D 大写为强制删除，不检查分支状态\n  git branch -d [local_branch_name]\n  \n  # 删除远程分支\n  git push origin -d [branch_name]\n  ```\n\n  \n","categories":["Other"]},{"title":"Typora+PicGo+Github-plus搭建图床","url":"/202302_Typora-Picgo-GithubPlus搭建图床/","content":"## Typora+PicGo+Github-plus搭建图床\n\n1. Github上创建一个公开项目\n\n2. 生成token（记得在电脑备份保存）\n\n   > 点击GitHub头像 —>选择 settings —> Developer settings —>Personal access tokens —> Generate a personal access token\n\n3. 下载`Picgo`，传送门 https://hub.fastgit.org/Molunerfinn/PicGo/releases\n\n   - 设置图床，插件 `github-plus`, PicGo中插件设置中搜索下载\n\n     - > PicGo中内置的Github图床支持，但是**不支持同步删除**，所以推荐`github-plus`\n\n     自定义域名设置：https://cdn.jsdelivr.net/gh/用户名/仓库名@latest\n\n     > jsDelivr 缓存刷新方式 https://cdn.jsdelivr.net/ `替换` 成 https://purge.jsdelivr.net/\n     > 即可实时刷新。刷新成功后，浏览器会返回缓存刷新成功的信息\n\n     [![img](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@latest/images/202108231735360.png)](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202108231735360.png)\n\n   - 设置Typora\n\n     [![img](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202108231743173.png)](https://cdn.jsdelivr.net/gh/Gardennias/Personal-gallery@main/images/202108231743173.png)\n\n4. 下载`Typora`，传送门[https://www.typora.io](https://www.typora.io/)\n\n## GitHub加速访问\n\n- [https://github.com.cnpmjs.org](https://github.com.cnpmjs.org/)\n\n- [https://hub.fastgit.org](https://hub.fastgit.org/)\n\n- 无需下载像vscode一样在线阅读代码，只需要在GitHub 仓库域名后面加上 `1s`（1 秒内）\n\n  https://github1s.com/Gardennias/Personal-gallery\n\n## GitHub搜索技巧\n\n1. `in:name xxx // 按照项目名搜索`\n2. `in:readme xxx // 按照README搜索`\n3. `in:description xxx // 按照description搜索`\n\n在此基础可以增加筛选条件\n\n1. `stars:>xxx // stars数大于xxx`\n2. `forks:>3000 // forks数大于xxx`\n3. `language:xxx // 编程语言是xxx`\n4. `pushed:>YYYY-MM-DD // 最后更新时间大于YYYY-MM-DD`\n\n","tags":["Other"],"categories":["Other"]}]